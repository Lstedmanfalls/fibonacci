version: 2.1

orbs:
  python: circleci/python@2.1.1
  aws-cli: circleci/aws-cli@4.1.2
  aws-ecr: circleci/aws-ecr@9.0.2
  aws-ecs: circleci/aws-ecs@4.0.0

jobs:
  test:
    executor: 
      name: python/default
      tag: '3.12'
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: poetry
      - run:
          name: Run tests
          command: poetry run pytest --junitxml=junit.xml || ((($? == 5)) && echo 'Did not find any tests to run.')
      - store_test_results:
          path: junit.xml
  
  terraform-plan-dev:
    executor: 
      name: python/default
      tag: '3.12'
    steps:
      - checkout
      - run:
          name: Merge code to terraform branch
          command: |
            git config user.email "terraform-dev.com"
            git config user.name "terraform dev"
            git checkout -b terraform-dev || true
            git push --set-upstream origin terraform-dev

workflows:
  deploy-dev:
    jobs:
      - test:
          filters:
            branches:
              only: /.*-dev.*/
      - terraform-plan-dev:
          filters:
            branches:
              only: /.*-dev.*/
      - aws-ecr/build_and_push_image:
          name: build-dev
          account_id: $account_id
          auth:
            - aws-cli/setup:
                role_arn: $role_arn
          context: aws
          executor: 
            name: python/default
            tag: '3.12'
          no_output_timeout: 2m
          region: us-east-2
          remote_docker_layer_caching: true
          repo: fibonacci-development
          tag: $CIRCLE_SHA1
          setup_remote_docker: true
          filters:
            branches:
              only: /.*-dev.*/
      - aws-ecs/deploy_service_update:
          name: deploy-dev-ecs
          context: aws
          region: us-east-2
          auth:
            - aws-cli/setup:
                role_arn: $role_arn
          cluster: fibonacci-development
          container_image_name_updates: container=fibonacci-development,tag=${CIRCLE_SHA1}
          family: fibonacci-development
          requires:
            - build-dev

  backend:
    jobs:
      - test:
          filters:
            branches:
              only: main            
      # deploy to staging
      - aws-ecr/build_and_push_image:
          name: build-staging
          account_id: $account_id
          auth:
            - aws-cli/setup:
                role_arn: $role_arn
          context: aws
          executor: 
            name: python/default
            tag: '3.12'
          no_output_timeout: 2m
          region: us-east-2
          remote_docker_layer_caching: true
          repo: fibonacci-staging
          tag: $CIRCLE_SHA1
          setup_remote_docker: true
          filters:
            branches:
              only: main
          requires:
            - test
      - aws-ecs/deploy_service_update:
          name: deploy-staging-ecs
          context: aws
          region: us-east-2
          auth:
            - aws-cli/setup:
                role_arn: $role_arn
          cluster: fibonacci-staging
          container_image_name_updates: container=fibonacci-staging,tag=${CIRCLE_SHA1}
          family: fibonacci-staging
          requires:
            - build-staging

      # deploy to production
      - aws-ecr/build_and_push_image:
          name: build-production
          auth:
            - aws-cli/setup:
                role_arn: $role_arn
          context: aws
          executor: 
            name: python/default
            tag: '3.12'
          no_output_timeout: 2m
          region: us-east-2
          remote_docker_layer_caching: true
          repo: fibonacci-production
          tag: $CIRCLE_SHA1
          setup_remote_docker: true
          filters:
            branches:
              only: main
          requires:
            - deploy-staging-ecs
      - aws-ecs/deploy_service_update:
          context: aws
          region: us-east-2
          name: deploy-production-ecs
          auth:
            - aws-cli/setup:
                role_arn: $role_arn
          cluster: fibonacci-production
          container_image_name_updates: container=fibonacci-production,tag=${CIRCLE_SHA1}
          family: fibonacci-production
          requires:
            - build-production
